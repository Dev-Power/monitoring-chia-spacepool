/*
 * Space Pool Developer API
 *
 * Space Pool public developer REST APIs
 *
 * The version of the OpenAPI document: v1
 * Contact: info@pool.space
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using SpacePoolMonitor.ApiClient.Api;
using SpacePoolMonitor.ApiClient.Model;
using SpacePoolMonitor.ApiClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace SpacePoolMonitor.ApiClient.Test.Model
{
    /// <summary>
    ///  Class for testing FarmV1Model
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FarmV1ModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FarmV1Model
        //private FarmV1Model instance;

        public FarmV1ModelTests()
        {
            // TODO uncomment below to create an instance of FarmV1Model
            //instance = new FarmV1Model();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FarmV1Model
        /// </summary>
        [Fact]
        public void FarmV1ModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" FarmV1Model
            //Assert.IsType<FarmV1Model>(instance);
        }


        /// <summary>
        /// Test the property 'LauncherId'
        /// </summary>
        [Fact]
        public void LauncherIdTest()
        {
            // TODO unit test for the property 'LauncherId'
        }
        /// <summary>
        /// Test the property 'UnpaidBalanceInXCH'
        /// </summary>
        [Fact]
        public void UnpaidBalanceInXCHTest()
        {
            // TODO unit test for the property 'UnpaidBalanceInXCH'
        }
        /// <summary>
        /// Test the property 'TotalPaidInXCH'
        /// </summary>
        [Fact]
        public void TotalPaidInXCHTest()
        {
            // TODO unit test for the property 'TotalPaidInXCH'
        }
        /// <summary>
        /// Test the property 'BlocksFound'
        /// </summary>
        [Fact]
        public void BlocksFoundTest()
        {
            // TODO unit test for the property 'BlocksFound'
        }
        /// <summary>
        /// Test the property 'EstimatedPlotSizeTiB'
        /// </summary>
        [Fact]
        public void EstimatedPlotSizeTiBTest()
        {
            // TODO unit test for the property 'EstimatedPlotSizeTiB'
        }
        /// <summary>
        /// Test the property 'EstimatedPlots'
        /// </summary>
        [Fact]
        public void EstimatedPlotsTest()
        {
            // TODO unit test for the property 'EstimatedPlots'
        }
        /// <summary>
        /// Test the property 'TenureDateTimeUtc'
        /// </summary>
        [Fact]
        public void TenureDateTimeUtcTest()
        {
            // TODO unit test for the property 'TenureDateTimeUtc'
        }
        /// <summary>
        /// Test the property 'PendingPoints'
        /// </summary>
        [Fact]
        public void PendingPointsTest()
        {
            // TODO unit test for the property 'PendingPoints'
        }
        /// <summary>
        /// Test the property 'AccountDisplayName'
        /// </summary>
        [Fact]
        public void AccountDisplayNameTest()
        {
            // TODO unit test for the property 'AccountDisplayName'
        }
        /// <summary>
        /// Test the property 'Rank'
        /// </summary>
        [Fact]
        public void RankTest()
        {
            // TODO unit test for the property 'Rank'
        }
        /// <summary>
        /// Test the property 'Difficulty'
        /// </summary>
        [Fact]
        public void DifficultyTest()
        {
            // TODO unit test for the property 'Difficulty'
        }

    }

}
